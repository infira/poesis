<?php
//########################################################################################
//##############################                            ##############################
//############################## THIS IS AUTOGENERATED FILE ##############################
//##############################                            ##############################
//########################################################################################

%modelNamespace%
%modelImports%
use Infira\Poesis\orm\ModelColumn;
use Infira\Poesis\Poesis;
use Infira\Poesis\orm\node\Field;

/**
 * ORM model for %table%
 *
 * @property %className% $Where class where values
 * %autoAssistProperty%
 */
class %className% extends %modelExtendor%
{
    %modelTraits%
    /**
     * %className% constructor.
     *
     * @param array $options = []
     */
	public function __construct(array $options = [])
	{
        $this->Schema = '%modelNewClass%Schema';
        $this->Schema::construct();
        $this->dataMethodsClassName = '%dataMethodsClass%';
        $options['connection']  = $options['connection'] ?? '%modelDefaultConnectionName%';
		parent::__construct($options);
	}

	/**
     * Select data from database
     *
     * @param string|array $columns - fields to use in SELECT $fields FROM, * - use to select all fields, otherwise it will be exploded by comma
     * @return %dataMethodsClass%
     */
    public function select($columns = null): %dataMethodsClass%
    {
        return parent::select($columns);
    }

	%columnMethods%
}

class %className%Schema
{
    use \Infira\Poesis\orm\Schema;

	public static function construct()
	{
	    self::$tableName        = '%tableName%';
	    self::$dbName           = '%dbName%';
	    self::$fullTableName    = '%dbName%.%tableName%';
        self::$modelName        = '%className%';
        self::$newModelName     = '%modelNewClass%';
	    self::$columns          = [%columnNames%];
        self::$primaryColumns   = %primaryColumns%;
        self::$aiColumn         = %aiColumn%;
        self::$TIDColumn        = %TIDColumn%;
        self::$UUIDColumn       = %UUIDColumn%;
        self::$isView           = %isView%;
		%columnTypes%
	}
}
%dataMethods%
%node%
?>