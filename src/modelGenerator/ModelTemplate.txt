<?php
use \Infira\Poesis\orm\Model;
use \Infira\Poesis\orm\Schema;
use \Infira\Poesis\orm\Field;
use \Infira\Poesis\orm\FieldCollection;
use Infira\Poesis\Poesis;

if (!trait_exists("%className%Extension", false))
{
	trait %className%Extension
	{
	    public function initExtension() {}
	}
}
/**
 *
 *
 *
 *
 *
 *                 DO NOT EDIT THIS FILE
 *
 *
 *
 *
 *
 * This is a auto generated database class wich handles object table
 * @author Infira\Poesis\modelGenerator\ModelGenerator
 * @property FieldCollection $Fields
 * @property %className%Schema $Schema
 * @property %className% $Where class where values
 *
 * %autoAssistProperty%
 */
class %className% extends Model
{
    use %className%Extension;

    %constructorParameterComment%
	public function __construct(%constructorParameter%)
	{
	    $this->_className = '%className%';
	    $this->_schemaClassName = '%className%Schema';

		parent::__construct();
		%constructorParameterSetIf%
	}

    /**
	 * Set flag to return fieldMethods as sequnce instead of Field
	 */
	public function fieldSequence()
	{
        $this->fieldSequence = true;
    }

	%fieldMethods%
}


%schema%